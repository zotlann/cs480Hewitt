#version 330

layout (location = 0) in vec3 v_position;
layout (location = 1) in vec2 v_texture_coordinates;
layout (location = 2) in vec3 v_normal;

out vec2 texture_coordinates;
out vec4 color;

uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform mat4 modelMatrix;
uniform mat4 modelViewMatrix;
uniform vec4 AmbientProduct;
uniform vec4 DiffuseProduct;
uniform vec4 SpecularProduct;
uniform vec3 lightPosition;

uniform float shininess;

void main(void){
  vec3 pos = ((viewMatrix * modelMatrix) * vec4(v_position,1.0)).xyz;
  vec3 L = normalize(lightPosition.xyz - pos);
  vec3 E = normalize(-pos);
  vec3 H = normalize(L+E);

  vec3 N = normalize((viewMatrix * modelMatrix) * vec4(v_normal,0.0)).xyz;

  vec4 ambient = AmbientProduct;
  float Kd = max(dot(L,N),0.0);
  vec4 diffuse = Kd*DiffuseProduct;
  float Ks = pow(max(dot(N,H),0.0),shininess);
  vec4 specular = Ks* SpecularProduct;
  gl_Position = (projectionMatrix * viewMatrix * modelMatrix) * vec4(v_position,1.0);
  color = ambient + diffuse + specular;
  color.a = 1.0;

  texture_coordinates = v_texture_coordinates;
}
